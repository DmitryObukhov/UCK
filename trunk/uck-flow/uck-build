#!/bin/sh
#
# $Id$
#
# NAME:
#	uck-build -- non-interactive version of uck-flow
#
# SYNOPSIS:
#	uck-build [-m] project_dir
#
# DESCRIPTION:
#
#
# AUTHOR:
#	Wolf Geldmacher <wolf at womaro.ch>
#
# COPYRIGHT:
#	Copyright Â© 2010, The UCK Team
#	
# LICENSE:
#	uck-build is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	uck-build is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with uck-build.  If not, see <http://www.gnu.org/licenses/>.

# Handle arguments
use_mount=""
while [ -n "$1" ]; do
	case $1 in
	-m)	use_mount="-m"; shift;;
	*)	break;;
	esac
done

# Check remaining arguments
case $# in
1)	: ok, that is what we need;;
*)	echo "Usage: $0 [-m] project-dir" >&2
	exit 1;;
esac

if [ ! -d "$1" -o ! -d "$1"/customization-dir ]; then
	echo "$0: '$1' does not seem to be a project directory" >&2
	exit 1
fi

# Make sure we run as root
case `id -u` in
0)	: ok, this is what we need;;
*)	echo "$0: This procedure must be run as root" >&2
	exit 1;;
esac

# Now to the actual run:
#	Evaluate project environment
sdir="$1/customization-scripts"
if [ ! -f "$sdir"/project.uck ]; then
	echo "$0: project.uck file not found in project" >&2
	exit 1
fi
. "$sdir/project.uck"
#	"Absolutize" path names
for name in UCK_PROJECT_DIR UCK_PREPARE_ISO UCK_CUSTOMIZE_ISO UCK_TARGET UCK_CUSTOMIZE_INITRD UCK_CUSTOMIZE_ROOT UCK_CUSTOMIZE_TEST UCK_FINALIZE_ROOT
do
	x=`eval echo \$name`
	case $x in
	/*)	: ok - is absolute path already;;
	*)	eval $name="$UCK_PROJECT_DIR/customization-scripts/$x";;
	esac
done
for name in UCK_LOGFILE UCK_SOURCE UCK_TARGET
do
	x=`eval echo \$name`
	case $x in
	/*)	: ok - is absolute path already;;
	*)	eval $name="$UCK_PROJECT_DIR/$x";;
	esac
done

#	Redirect output to project logfile
echo "Redirecting output to '$UCK_LOGFILE'..."
exec </dev/null >"$UCK_LOGFILE" 2>&1

#	Run all steps (except cleaning) that would be run from uck-flow
cd "$UCK_PROJECT_DIR"
trap 'uck-remaster-umount "$UCK_PROJECT_DIR"; trap : 0; exit 3' 0 1 2 3 15

"$UCK_PREPARE_ISO" "$UCK_PROJECT_DIR" || exit 2
uck-remaster-unpack-iso $use_mount "$UCK_SOURCE" "$UCK_PROJECT_DIR" || exit 2
uck-remaster-unpack-rootfs $use_mount "$UCK_PROJECT_DIR" || exit 2
uck-remaster-chroot-rootfs "$UCK_PROJECT_DIR" /tmp/customization-scripts/customize_root || exit 2
"$UCK_FINALIZE_ROOT" "$UCK_PROJECT_DIR" || exit 2
uck-remaster-pack-rootfs "$UCK_PROJECT_DIR" || exit 2
"$UCK_CUSTOMIZE_ISO" "$UCK_PROJECT_DIR" || exit 2
#-- FIXME: unpack/customize/pack initrd
uck-remaster-pack-iso "$UCK_TARGET" "$UCK_PROJECT_DIR" --description "$UCK_PROJECT_NAME" || exit 2
"$UCK_CUSTOMIZE_TEST" "$UCK_PROJECT_DIR" || exit 2

# That's all folks
exit 0
