#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# $Id$
#
# NAME:
#	uck-flow -- run the UCK flow tool
#
# SYNOPSIS:
#	uck-flow [-m] [project]
#
# DESCRIPTION:
#	uck-flow is a tool that allows for restartable graphical customization
#	of Ubuntu distributions. It closely interacts with UCK (the Ubuntu
#	Customization Kit).
#
#	The -m option will try to use union mounts to preserve time and space.
#	For this to work the UCK version used must support it.
#
# AUTHOR:
#	Wolf Geldmacher, wolf <at> womaro.ch, http.//www.womaro.ch
#
# COPYRIGHT:
#	Copyright Â© 2010, The UCK Team
#
# LICENSE:
#	uck-flow is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	uck-flow is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with uck-flow.  If not, see <http://www.gnu.org/licenses/>.

import sys
import pygtk
pygtk.require("2.0")
import gtk
from uckflow.uckFlow import UckFlow

# message localization support
APP = "uckFlow"
DIR = "locale"
import locale
import gettext
import getopt
locale.setlocale(locale.LC_ALL, '')
gettext.bindtextdomain(APP, DIR)
gettext.textdomain(APP)
_ = gettext.gettext

# A utility funtion to print a usage message
def usage():
	print _("Usage: uck-flow [-m] [project-dir]")
	sys.exit(2)

# The main program
def main(argv):
	try:
		opts, args = getopt.getopt(argv, "mh", [ "mount", "help" ])
	except getopt.GetoptError:
		usage()

	use_mount = False
	for opt, arg in opts:
		if opt in ("-h", "--help"):
			usage()
		elif opt in ("-m", "--mount"):
			use_mount = True

	# First of remaining arguments is taken to be project directory
	if len(args) > 0:
		anUckFlow = UckFlow(args[0], useMount = use_mount)
	else:
		anUckFlow = UckFlow(useMount = use_mount)

	# Run the GUI
	try:
		gtk.main()
	except KeyboardInterrupt:
		print _("+++Program terminated by keyboard interrupt")
		anUckFlow.quit()

if __name__ == "__main__":
	main(sys.argv[1:])
