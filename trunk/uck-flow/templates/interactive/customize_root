#!/bin/bash
#
# $Id: customize_root,v 2.1 2010-02-22 09:19:04 wjg Exp $
#
# NAME:
#	customize_root -- customize the root file system
#
# SYNOPSIS:
#	customize_root
#
# DESCRIPTION:
#	This script runs as root in the environment of the future root file
#	system (chrooted to the unpacked root file system), therefore some
#	special rules apply:
#
#	- The only data shared between your current system and the future
#	  root file system is the customization-script directory that gets
#	  copied into /tmp of the target root file system (but is *not*
#	  copied back!).
#
# COPYRIGHT:
#	Copyright Â© 2010, The UCK Team
#
# LICENSE:
#	uckFlow is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	uckFlow is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with uckFlow.  If not, see <http://www.gnu.org/licenses/>.

# Print an error message an exit
failure() { echo "$0: $@" >&2; exit 1; }

# Source environment. Special case customize_root: found in /tmp!
if [ -f "/tmp/customization-scripts/project.uck" ]; then
	. "/tmp/customization-scripts/project.uck"
	UCK_PROJECT_DIR=/tmp
else
	failure "Cannot create UCK environment!"
fi

# Can access all of the variables set in project config now:
PROJECT_DIR="$UCK_PROJECT_DIR"
SCRIPT_DIR="$UCK_PROJECT_DIR/customization-scripts"

run_package_manager() {
	echo "Starting package application..."
	
	PACKAGE_APP=`which adept`
	PACKAGE_APP_OPTIONS=(--caption "UCK Package Manager")
	if [ "$PACKAGE_APP" = "" ]; then
		PACKAGE_APP=`which adept_manager`
	fi
	if [ "$PACKAGE_APP" = "" ]; then
		PACKAGE_APP=`which synaptic`
		PACKAGE_APP_OPTIONS=(-t "UCK Package manager")
	fi
	
	if [ "$PACKAGE_APP" = "" ]; then
		dialog_msgbox "Failure" "Unable to find any package manager application"
	else
		$PACKAGE_APP "${PACKAGE_APP_OPTIONS[@]}"
		RESULT=$?
	
		if [ $RESULT -ne 0 ]; then
			dialog_msgbox "Failure" "Running package application $PACKAGE_APP failed, error=$RESULT"
		fi
	fi
}

run_console() {
	echo "Starting console application..."
	
	CONSOLE_APP=`which konsole`
	CONSOLE_APP_OPTIONS=(--caption "UCK customization console" -e /bin/bash)
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which gnome-terminal`
		CONSOLE_APP_OPTIONS=(-t "UCK customization console" -e /bin/bash)
	fi
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which xfce4-terminal`
		CONSOLE_APP_OPTIONS=(-t "UCK customization console" -e /bin/bash)
	fi
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which xterm`
		CONSOLE_APP_OPTIONS=(-title "UCK customization console" -e /bin/bash)
	fi
	
	if [ "$CONSOLE_APP" = "" ]; then
		dialog_msgbox "Failure" "Unable to find any console application"
	else
		$CONSOLE_APP "${CONSOLE_APP_OPTIONS[@]}"
		RESULT=$?
	
		if [ $RESULT -ne 0 ]; then
			echo "Running console application $CONSOLE_APP failed, trying the fallback xterm"
			xterm -title "UCK customization console" -e /bin/bash
			RESULT=$?
			if [ $RESULT -ne 0 ]; then
				dialog_msgbox "Failure" "Running console application $CONSOLE_APP failed, error=$RESULT"
			fi
		fi
	fi
}

. "$SCRIPT_DIR/gui.sh"

while true ; do
	CHOICE_PACKAGE_MANAGER="Run package manager"
	CHOICE_CONSOLE="Run console application"
	CHOICE_EXIT="Done with root file system customization"
	CHOICE=`dialog_menu "Please choose customization action" "$CHOICE_PACKAGE_MANAGER" "$CHOICE_CONSOLE" "$CHOICE_EXIT"`
	RESULT=$?

	if [ $RESULT -ne 0 ] ; then
		failure "Script cancelled by user"
	fi
	#workaround for KDE bug (https://bugs.kde.org/show_bug.cgi?id=139025)
	CHOICE=`echo "$CHOICE" | grep -v -i kwrited | tail -n1`

	echo "CHOICE='$CHOICE'"

	if [ "$CHOICE" = "$CHOICE_EXIT" ] ; then
		break
	elif [ "$CHOICE" = "$CHOICE_PACKAGE_MANAGER" ] ; then
		run_package_manager
	elif [ "$CHOICE" = "$CHOICE_CONSOLE" ] ; then
		run_console
	fi
done
